set nocompatible "be iMproved, required
filetype off " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/syntastic' " 语法检测工具
Plugin 'scrooloose/nerdcommenter' "注释代码工具 \cc注释当前行 \cu 撤销注释当前行 \cs sexily注释 \cA 行尾注释，切换成输入模式
Plugin 'scrooloose/nerdtree' "树状结构文件夹目录
Plugin 'majutsushi/tagbar'
Plugin 'jiangmiao/auto-pairs' " 括号自动匹配
Plugin 'Valloric/YouCompleteMe'
Plugin 'Chiel92/vim-autoformat'
Plugin 'SirVer/ultisnips'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
" filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"powerline部分"
set number
set termencoding=utf-8
set background=dark
set backspace=2 "设置更好的删除"

syntax on "自动语法高亮"

"用浅色高亮当前行"
autocmd InsertLeave * se nocul
autocmd InsertEnter * se cul

set smartindent "智能对齐"
set autoindent "自动对齐"
set tabstop=4 "tab键的宽度"
set shiftwidth=4 "统一缩进为4"
set expandtab "不要用空格替代制表符"
"set autochdir "自动切换当前目录位当前文件所在目录"

set history=50  "历史纪录数"
set hlsearch "搜索时高亮被查找到的文本"
set gdefault "行内替换“
set encoding=utf-8
set fileencodings=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936,utf-16,big5,euc-jp,latin1 "编码设置”
set langmenu=zn_CN.UTF-8
set helplang=cn  "语言设置”
set ruler "在编辑过程中，在右下角显示光标位置的状态行“
set laststatus=2 " 显示状态栏 (默认值为 1, 无法显示状态栏)
set statusline=\ %<%F%=\ %y\ %0(%{&fileformat}\ %{&encoding}\ %c:%l/%L%)\
" 设置在状态行显示的信息

set scrolloff=3 "光标移动到buffer的顶部和底部时保持3行的距离"
set showmatch "高亮显示对应的括号"
set matchtime=5 "对应括号高亮时间(单位是十分之一秒)"

set foldenable  "允许折叠"
set foldmethod=syntax " 设置语法折叠
setlocal foldlevel=1 " 设置折叠层数为

"au BufWinLeave * silent mkview   //自动保存折叠状态
"au BufWinEnter * silent loadview
" " nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>

set cursorline "突出显示当前行"

" 配置nerdtree的快捷键
map <F2> :NERDTreeToggle<CR>
" tagbar插件
nmap <F3> :TagbarToggle<CR>
let g:tagbar_vertical = 30

let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'  "设置全局配置文件的路径
let g:ycm_seed_identifiers_with_syntax=1    " 语法关键字补全
let g:ycm_confirm_extra_conf=0  " 打开vim时不再询问是否加载ycm_extra_conf.py配置
let g:ycm_key_invoke_completion = '<C-a>' " ctrl + a 触发补全
set completeopt=longest,menu    "让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)"


let g:UltiSnipsExpandTrigger="#!"
